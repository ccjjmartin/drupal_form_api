<?php
/**
 * @file
 * Example usage of Madlib module.
 */

/**
 * Implements hook_menu().
 */
function madlib_menu() {
  $items = array();

  $items['admin/config/madlib'] = array(
    'title' => 'Madlib',
    'description' => 'Settings for the Madlib module.',
    'page callback' => 'madlib_admin_menu_block_page',
    'access arguments' => array('administer madlib settings'),
    'file' => 'madlib.admin.inc',
    'file path' => drupal_get_path('module', 'madlib'),
  );

  $items['admin/config/madlib/settings'] = array(
    'title' => 'Madlib Settings',
    'description' => 'Settings for the Madlib module.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('madlib_admin_settings'),
    'access arguments' => array('administer madlib settings'),
    'file' => 'madlib.admin.inc',
    'file path' => drupal_get_path('module', 'madlib'),
  );

  $items['madlib'] = array(
    'title' => 'Have I got a Giraffe for You!',
    'description' => 'A madlib using drupal form api',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('madlib_form'),
    'access arguments' => array('view published content'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function madlib_permission() {
  return array(
    'administer madlib settings' => array(
      'title' => t('Administer Madlib Settings'),
      'description' => t('Perform administration tasks for Madlib'),
    ),
  );
}

/**
 * Implements hook_form_alter().
 */
function madlib_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'madlib_form') {
    if (variable_get('madlib_checkbox', 0) == 1) {
      $form['madlib_note'] = array(
        '#markup' => '<h1><b><p class="madlib_hide_me"> DEBUG MODE: ON </p></b></h1>',
      );
    }
  }
}

/**
 * Simple madlib form.
 */
function madlib_form($form, &$form_state) {

  $form['madlib_ajax_status_messages'] = array(
    '#type' => 'markup',
    '#prefix' => '<div id="madlib_ajax_status_messages">',
    '#suffix' => '</div>',
  );

  $form['madlib_section_1_fieldset'] = array(
    '#type' => 'fieldset',
    '#title' => t('Section 1'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    '#attributes' => array('class' => array('madlib_hide_me')),
    '#states' => array(
      'invisible' => array(
        ':input[name="madlib_hidden"]' => array('value' => 'yes'),
      ),
    ),
  );

  $form['madlib_section_1_fieldset']['madlib_plural_noun_1_textfield'] = array(
    '#type' => 'textfield',
    '#title' => t('Plural noun'),
    '#default_value' => variable_get('madlib_plural_noun_1_textfield', ''),
    '#size' => 60,
    '#maxlength' => 128,
    '#required' => TRUE,
    '#ajax' => array(
      'callback' => 'madlib_form_ajax_user_input_callback',
    ),
  );

  $form['madlib_section_1_fieldset']['madlib_plural_noun_2_textfield'] = array(
    '#type' => 'textfield',
    '#title' => t('Plural noun'),
    '#default_value' => variable_get('madlib_plural_noun_2_textfield', ''),
    '#size' => 60,
    '#maxlength' => 128,
    '#required' => TRUE,
    '#ajax' => array(
      'callback' => 'madlib_form_ajax_user_input_callback',
    ),
  );

  $form['madlib_section_1_fieldset']['madlib_part_of_body_1_textfield'] = array(
    '#type' => 'textfield',
    '#title' => t('Part of the body'),
    '#default_value' => variable_get('madlib_part_of_body_1_textfield', ''),
    '#size' => 60,
    '#maxlength' => 128,
    '#required' => TRUE,
    '#ajax' => array(
      'callback' => 'madlib_form_ajax_user_input_callback',
    ),
  );

  $form['madlib_section_2_fieldset'] = array(
    '#type' => 'fieldset',
    '#title' => t('Section 2'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    '#attributes' => array('class' => array('madlib_hide_me')),
    '#states' => array(
      'invisible' => array(
        ':input[name="madlib_hidden"]' => array('value' => 'yes'),
      ),
    ),
  );

  $form['madlib_section_2_fieldset']['madlib_number_select'] = array(
    '#type' => 'select',
    '#title' => t('Number'),
    '#options' => array(
      0 => 1,
      1 => 2,
      2 => 3,
      3 => 4,
      4 => 5,
      5 => 6,
      6 => 7,
      7 => 8,
      8 => 9,
      9 => 10,
    ),
    '#default_value' => variable_get('madlib_number_select', ''),
    '#required' => TRUE,
    '#ajax' => array(
      'callback' => 'madlib_form_ajax_user_input_callback',
    ),
  );

  $form['madlib_section_2_fieldset']['madlib_plural_noun_3_textfield'] = array(
    '#type' => 'textfield',
    '#title' => t('Plural noun'),
    '#default_value' => variable_get('madlib_plural_noun_3_textfield', ''),
    '#size' => 60,
    '#maxlength' => 128,
    '#required' => TRUE,
    '#ajax' => array(
      'callback' => 'madlib_form_ajax_user_input_callback',
    ),
  );

  $form['madlib_section_2_fieldset']['madlib_part_of_body_2_textfield'] = array(
    '#type' => 'textfield',
    '#title' => t('Part of the body'),
    '#default_value' => variable_get('madlib_part_of_body_2_textfield', ''),
    '#size' => 60,
    '#maxlength' => 128,
    '#required' => TRUE,
    '#ajax' => array(
      'callback' => 'madlib_form_ajax_user_input_callback',
    ),
  );

  $form['madlib_section_2_fieldset']['madlib_type_of_liquid_textfield'] = array(
    '#type' => 'textfield',
    '#title' => t('Type of liquid'),
    '#default_value' => variable_get('madlib_type_of_liquid_textfield', ''),
    '#size' => 60,
    '#maxlength' => 128,
    '#required' => TRUE,
    '#ajax' => array(
      'callback' => 'madlib_form_ajax_user_input_callback',
    ),
  );

  $form['madlib_section_2_fieldset']['madlib_part_of_body_plural_textfield'] = array(
    '#type' => 'textfield',
    '#title' => t('Part of the body (plural)'),
    '#default_value' => variable_get('madlib_part_of_body_plural_textfield', ''),
    '#size' => 60,
    '#maxlength' => 128,
    '#required' => TRUE,
    '#ajax' => array(
      'callback' => 'madlib_form_ajax_user_input_callback',
    ),
  );

  $form['madlib_section_3_fieldset'] = array(
    '#type' => 'fieldset',
    '#title' => t('Section 3'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    '#attributes' => array('class' => array('madlib_hide_me')),
    '#states' => array(
      'invisible' => array(
        ':input[name="madlib_hidden"]' => array('value' => 'yes'),
      ),
    ),
  );

  $form['madlib_section_3_fieldset']['madlib_part_of_body_3_select'] = array(
    '#type' => 'select',
    '#title' => t('Part of the body'),
    '#options' => array(
      t('head') => array(
        0 => t('eyes'),
        1 => t('nose'),
      ),
      t('torso') => array(
        2 => t('stomach'),
      ),
      t('legs') => array(
        3 => t('feet'),
      ),
    ),
    '#default_value' => variable_get('madlib_part_of_body_3_select', ''),
    '#required' => TRUE,
    '#ajax' => array(
      'callback' => 'madlib_form_ajax_user_input_callback',
    ),
  );

  $form['madlib_section_3_fieldset']['madlib_adjective_1_textfield'] = array(
    '#type' => 'textfield',
    '#title' => t('Adjective'),
    '#default_value' => variable_get('madlib_adjective_1_textfield', ''),
    '#size' => 60,
    '#maxlength' => 128,
    '#required' => TRUE,
    '#ajax' => array(
      'callback' => 'madlib_form_ajax_user_input_callback',
    ),
  );

  $form['madlib_section_3_fieldset']['madlib_plural_noun_4_textfield'] = array(
    '#type' => 'textfield',
    '#title' => t('Plural noun'),
    '#default_value' => variable_get('madlib_plural_noun_4_textfield', ''),
    '#size' => 60,
    '#maxlength' => 128,
    '#required' => TRUE,
    '#ajax' => array(
      'callback' => 'madlib_form_ajax_user_input_callback',
    ),
  );

  $form['madlib_section_3_fieldset']['madlib_adjective_2_textfield'] = array(
    '#type' => 'textfield',
    '#title' => t('Adjective'),
    '#default_value' => variable_get('madlib_adjective_2_textfield', ''),
    '#size' => 60,
    '#maxlength' => 128,
    '#required' => TRUE,
    '#ajax' => array(
      'callback' => 'madlib_form_ajax_user_input_callback',
    ),
  );

  $form['madlib_section_3_fieldset']['madlib_adjective_3_textfield'] = array(
    '#type' => 'textfield',
    '#title' => t('Adjective'),
    '#default_value' => variable_get('madlib_adjective_3_textfield', ''),
    '#size' => 60,
    '#maxlength' => 128,
    '#required' => TRUE,
    '#ajax' => array(
      'callback' => 'madlib_form_ajax_user_input_callback',
    ),
  );

  $form['madlib_section_3_fieldset']['madlib_verb_ing_textfield'] = array(
    '#type' => 'textfield',
    '#title' => t('Verb ending in "ing"'),
    '#default_value' => variable_get('madlib_verb_ing_textfield', ''),
    '#size' => 60,
    '#maxlength' => 128,
    '#required' => TRUE,
    '#ajax' => array(
      'callback' => 'madlib_form_ajax_user_input_callback',
    ),
  );

  $form['madlib_section_3_fieldset']['madlib_noun_1_textfield'] = array(
    '#type' => 'textfield',
    '#title' => t('Noun'),
    '#default_value' => variable_get('madlib_noun_1_textfield', ''),
    '#size' => 60,
    '#maxlength' => 128,
    '#required' => TRUE,
    '#ajax' => array(
      'callback' => 'madlib_form_ajax_user_input_callback',
    ),
  );

  $form['madlib_section_3_fieldset']['madlib_plural_noun_5_textfield'] = array(
    '#type' => 'textfield',
    '#title' => t('Plural noun'),
    '#default_value' => variable_get('madlib_plural_noun_5_textfield', ''),
    '#size' => 60,
    '#maxlength' => 128,
    '#required' => TRUE,
    '#ajax' => array(
      'callback' => 'madlib_form_ajax_user_input_callback',
    ),
  );

  $form['madlib_section_3_fieldset']['madlib_noun_2_textfield'] = array(
    '#type' => 'textfield',
    '#title' => t('Noun'),
    '#default_value' => variable_get('madlib_noun_2_textfield', ''),
    '#size' => 60,
    '#maxlength' => 128,
    '#required' => TRUE,
    '#ajax' => array(
      'callback' => 'madlib_form_ajax_user_input_callback',
    ),
  );

  $form['madlib_submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
    '#attributes' => array('class' => array('madlib_hide_me')),
    '#states' => array(
      'invisible' => array(
        ':input[name="madlib_hidden"]' => array('value' => 'yes'),
      ),
    ),
  );

  $form['madlib_note'] = array(
    '#markup' => '<p class="madlib_hide_me">Click it, you know you want to.</p>',
    '#states' => array(
      'invisible' => array(
        ':input[name="madlib_hidden"]' => array('value' => 'yes'),
      ),
    ),
  );

  // For non-JS enabled clients we need to set this form element so that
  // form states know what state the form is in (show / hide).
  if ($form_state['rebuild'] == FALSE ||
      (variable_get('madlib_checkbox', 0) == 1)) {
    $form['madlib_hidden'] = array(
      '#type' => 'hidden',
      '#value' => 'no',
    );
  }
  else {
    $form['madlib_hidden'] = array(
      '#type' => 'hidden',
      '#value' => 'yes',
    );

    // Apparently we can't hide markup type so we set it equal to nothing.
    $form['madlib_note'] = array();
  }

  // If JS is enabled we only need the div.
  $form['madlib_output'] = array(
    '#type' => 'markup',
    '#prefix' => '<div id="madlib_output_div">',
    '#suffix' => '</div>',
    '#markup' => '',
    '#states' => array(
      'visible' => array(
        ':input[name="madlib_hidden"]' => array('value' => 'yes'),
      ),
    ),
  );

  // If JS is disabled output the madlib.
  if ($form_state['rebuild'] == TRUE) {
    $form['madlib_output']['#markup']
      = madlib_form_output_text_with_t($form, $form_state);
  }

  // If JS is disabled and debug is off output the madlib and clear form array.
  if ($form_state['rebuild'] == TRUE &&
      variable_get('madlib_checkbox', 0) == 0) {

    $form = array();
    $form['madlib_output']['#markup']
      = madlib_form_output_text_with_t($form, $form_state);
  }

  return $form;
}

/**
 * AJAX callback for user inputs.
 *
 * @return array
 *   Renderable array (the markup element)
 */
function madlib_form_ajax_user_input_callback($form, &$form_state) {

  // If the form has not been rebuilt allow the user to enter
  // data and change nothing.
  if ($form_state['rebuild'] == TRUE) {

    // Clear previous messages (error) or they pile up and display all at once.
    drupal_get_messages();

    // Validation function is NOT automatically called so we must call it.
    // TODO: may be related to returning commands instead of part of a form.
    madlib_form_validate($form, $form_state);
    $errors = form_get_errors();

    $commands = array();

    // AJAX commands to run if the form did not pass validation.
    if (!empty($errors)) {
      $commands[] = ajax_command_replace('#madlib_output_div',
                                         '<div id="madlib_output_div"></div>');
    }

    // AJAX command to run if the form passed validation.
    else {

      // Passed validation and debug mode is ON.
      if (variable_get('madlib_checkbox', 0) == 1) {
        drupal_set_message(t('Answers received'));
      }

      // Passed validation and debug mode is OFF.
      elseif (variable_get('madlib_checkbox', 0) == 0) {
        drupal_set_message(t('Answers received'));
        $commands[]
          = ajax_command_css('.madlib_hide_me', array('display' => none));
      }

      // Common ajax commands for a validated form (no errors) and has been
      // rebuilt at least once.
      $commands[]
        = ajax_command_replace('.messages', '<div id="messages"></div>');
      $commands[]
        = ajax_command_replace('#madlib_ajax_status_messages',
                               '<div id="madlib_ajax_status_messages">' .
                               theme('status_messages') . '</div>');
      $commands[]
        = ajax_command_replace('#madlib_output_div',
                               madlib_form_output_text_with_t($form,
                                                              $form_state));
      $commands[]
        = ajax_command_invoke('input.error', 'removeClass', array('error'));
    }
  }

  return array('#type' => 'ajax', '#commands' => $commands);
}

/**
 * Madlib validate handler.
 */
function madlib_form_validate($form, &$form_state) {
  $required_keys = array(
    'madlib_plural_noun_1_textfield',
    'madlib_plural_noun_2_textfield',
    'madlib_plural_noun_3_textfield',
    'madlib_plural_noun_4_textfield',
    'madlib_plural_noun_5_textfield',
    'madlib_part_of_body_1_textfield',
    'madlib_part_of_body_2_textfield',
    'madlib_part_of_body_3_select',
    'madlib_number_select',
    'madlib_type_of_liquid_textfield',
    'madlib_part_of_body_plural_textfield',
    'madlib_adjective_1_textfield',
    'madlib_adjective_2_textfield',
    'madlib_adjective_3_textfield',
    'madlib_verb_ing_textfield',
    'madlib_noun_1_textfield',
    'madlib_noun_2_textfield',
  );

  $valid_keys = $required_keys;
  array_push($valid_keys,
    'madlib_ajax_status_messages',
    'madlib_submit',
    'madlib_note',
    'madlib_output',
    'madlib_hidden',
    'form_build_id',
    'form_token',
    'form_id',
    'op'
  );

  if (!empty($form_state['values']['madlib_verb_ing_textfield'])) {
    $verb_ing = $form_state['values']['madlib_verb_ing_textfield'];

    if (strtolower(substr($verb_ing, strlen($verb_ing) - 3, 3)) != 'ing') {
      form_set_error('madlib_verb_ing_textfield',
      'Verb_ing: Please enter a word that ends in "ing"');
    }
  }

  foreach ($form_state['values'] as $form_item_key => $value) {

    $plain_form_item_key = check_plain($form_item_key);
    $plain_value = check_plain($value);

    if (in_array($plain_form_item_key, $valid_keys)) {

      if ($plain_value <> $value) {
        form_set_error($plain_form_item_key,
          $plain_form_item_key . ': A form value should not contain anything other than plain text');
      }

      if (in_array($plain_form_item_key, $required_keys)) {
        if ($plain_value == '') {
          form_set_error($plain_value,
          $plain_form_item_key . ': is a required text field, please enter a value');
        }
      }
    }
    else {
      form_set_error($plain_form_item_key, $plain_form_item_key . ': Form key not recognized');
    }
  }
}

/**
 * Madlib form submit handler.
 */
function madlib_form_submit($form, &$form_state) {
  drupal_set_message(t('Answers received'));
  $form_state['rebuild'] = TRUE;
}

/**
 * Madlib form output text in the t().
 */
function madlib_form_output_text_with_t($form, &$form_state) {

  // CYA for logic flaws, if this function is called with errors return nothing.
  madlib_form_validate($form, $form_state);
  $errors = form_get_errors();
  if (!empty($errors)) {
    return;
  }

  if (empty($form_state['values']['madlib_plural_noun_1_textfield'])) {
    return;
  }

  // Find selected body part value.
  $body_part_text_value = '';

  $body_part_options
    = $form_state['complete form']['madlib_section_3_fieldset']['madlib_part_of_body_3_select']['#options'];

  foreach ($body_part_options as $array) {
    foreach ($array as $body_part => $text_value) {
      if ($body_part == $form_state['values']['madlib_part_of_body_3_select']) {
        $body_part_text_value = $text_value;
      }
    }
  }

  // Correct a/an to a or an.
  // Technically this isn't 100% correct but it is better than before.
  $vowels = array('a', 'e', 'i', 'o', 'u');

  $madlib_adjective_2_textfield_a_an = '';
  if (in_array(substr(check_plain($form_state['values']['madlib_adjective_2_textfield']), 0, 1), $vowels)) {
    $madlib_adjective_2_textfield_a_an = 'a';
  }
  else {
    $madlib_adjective_2_textfield_a_an = 'an';
  }

  $madlib_adjective_3_textfield_a_an = '';
  if (in_array(substr(check_plain($form_state['values']['madlib_adjective_3_textfield']), 0, 1), $vowels)) {
    $madlib_adjective_3_textfield_a_an = 'a';
  }
  else {
    $madlib_adjective_3_textfield_a_an = 'an';
  }

  // For cleaner code create two variables.
  $madlib_number_select_value = $form_state['values']['madlib_number_select'];
  $madlib_number_select
    = $form_state['complete form']['madlib_section_2_fieldset']['madlib_number_select']['#options'][$madlib_number_select_value];

  // Generate the text using the t().
  $output
    = '<div id="madlib_output_div"><h1>' .
    t(
      'Giraffes have aroused the curiousity of <b>@madlib_plural_noun_1_textfield</b>
      since earliest times.  The giraffe is the tallest of all living <b>@madlib_plural_noun_2_textfield</b>
      , but scientists are unable to explain how it got its long <b>@madlib_part_of_body_1_textfield</b>
      .  The giraffe\'s tremendous height, which might reach <b>@madlib_number_select</b>
      <b>@madlib_plural_noun_3_textfield</b>
      , comes mostly from its legs and <b>@madlib_part_of_body_2_textfield</b>
      .  If a giraffe wants to take a drink of <b>@madlib_type_of_liquid_textfield</b>
       from the ground, it has <b>@madlib_part_of_body_plural_textfield</b>
       far apart in order to reach down and lap up the water with its huge <b>@body_part_text_value</b>
      .  The giraffe has <b>@madlib_adjective_1_textfield</b>
       ears that are sensitive to the faintest <b>@madlib_plural_noun_4_textfield</b>
      , and it has @madlib_adjective_2_textfield_a_an <b>@madlib_adjective_2_textfield</b>
       sense of smell and sight.  When attacked, 
      a giraffe can put up @madlib_adjective_2_textfield_a_an <b>@madlib_adjective_3_textfield</b>
       fight by <b>@madlib_verb_ing_textfield</b>
       out with its hind legs and using its head like a sledge <b>@madlib_noun_1_textfield</b>
      .  Finally, a giraffe can gallop at more than thirty <b>@madlib_plural_noun_5_textfield</b>
       an hour when pursued and can outrun the fastest <b>@madlib_noun_2_textfield</b>
      .',
      array(
        '@madlib_plural_noun_1_textfield' => $form_state['values']['madlib_plural_noun_1_textfield'],
        '@madlib_plural_noun_2_textfield' => $form_state['values']['madlib_plural_noun_2_textfield'],
        '@madlib_part_of_body_1_textfield' => $form_state['values']['madlib_part_of_body_1_textfield'],
        '@madlib_number_select' => $madlib_number_select,
        '@madlib_plural_noun_3_textfield' => $form_state['values']['madlib_plural_noun_3_textfield'],
        '@madlib_part_of_body_2_textfield' => $form_state['values']['madlib_part_of_body_2_textfield'],
        '@madlib_type_of_liquid_textfield' => $form_state['values']['madlib_type_of_liquid_textfield'],
        '@madlib_part_of_body_plural_textfield' => $form_state['values']['madlib_part_of_body_plural_textfield'],
        '@body_part_text_value' => $body_part_text_value,
        '@madlib_adjective_1_textfield' => $form_state['values']['madlib_adjective_1_textfield'],
        '@madlib_plural_noun_4_textfield' => $form_state['values']['madlib_plural_noun_4_textfield'],
        '@madlib_adjective_2_textfield_a_an' => $madlib_adjective_2_textfield_a_an,
        '@madlib_adjective_2_textfield' => $form_state['values']['madlib_adjective_2_textfield'],
        '@madlib_adjective_3_textfield_a_an' => $madlib_adjective_3_textfield_a_an,
        '@madlib_adjective_3_textfield' => $form_state['values']['madlib_adjective_3_textfield'],
        '@madlib_verb_ing_textfield' => $form_state['values']['madlib_verb_ing_textfield'],
        '@madlib_noun_1_textfield' => $form_state['values']['madlib_noun_1_textfield'],
        '@madlib_plural_noun_5_textfield' => $form_state['values']['madlib_plural_noun_5_textfield'],
        '@madlib_noun_2_textfield' => $form_state['values']['madlib_noun_2_textfield'],
      )
    ) .
  '</h1></div>';

  return $output;
}
